C:37:"PHPUnit\Runner\DefaultTestResultCache":30910:{a:2:{s:7:"defects";a:5:{s:57:"SAML2\AuthnRequestTest::testSettingNameIDPolicyFormatOnly";i:4;s:45:"SAML2\AuthnRequestTest::testExtensionOrdering";i:4;s:47:"SAML2\AuthnRequestTest::testSettingNameIDPolicy";i:4;s:46:"SAML2\XML\md\NameIDTestPolicy::testMarshalling";i:3;s:48:"SAML2\XML\md\NameIDTestPolicy::testUnmarshalling";i:3;}s:5:"times";a:382:{s:117:"SAML2\Assertion\Validation\ConstraintValidator\NotBeforeTest::timestamp_in_the_future_beyond_graceperiod_is_not_valid";d:0.123;s:94:"SAML2\Assertion\Validation\ConstraintValidator\NotBeforeTest::time_within_graceperiod_is_valid";d:0.111;s:83:"SAML2\Assertion\Validation\ConstraintValidator\NotBeforeTest::current_time_is_valid";d:0.152;s:118:"SAML2\Assertion\Validation\ConstraintValidator\NotOnOrAfterTest::timestamp_in_the_past_before_graceperiod_is_not_valid";d:0.125;s:97:"SAML2\Assertion\Validation\ConstraintValidator\NotOnOrAfterTest::time_within_graceperiod_is_valid";d:0.133;s:86:"SAML2\Assertion\Validation\ConstraintValidator\NotOnOrAfterTest::current_time_is_valid";d:0.117;s:125:"SAML2\Assertion\Validation\ConstraintValidator\SessionNotOnOrAfterTest::timestamp_in_the_past_before_graceperiod_is_not_valid";d:0.121;s:104:"SAML2\Assertion\Validation\ConstraintValidator\SessionNotOnOrAfterTest::time_within_graceperiod_is_valid";d:0.149;s:93:"SAML2\Assertion\Validation\ConstraintValidator\SessionNotOnOrAfterTest::current_time_is_valid";d:0.114;s:126:"SAML2\Assertion\Validation\ConstraintValidator\SpIsValidAudienceTest::when_no_valid_audiences_are_given_the_assertion_is_valid";d:0.067;s:144:"SAML2\Assertion\Validation\ConstraintValidator\SpIsValidAudienceTest::if_the_sp_entity_id_is_not_in_the_valid_audiences_the_assertion_is_invalid";d:0.004;s:142:"SAML2\Assertion\Validation\ConstraintValidator\SpIsValidAudienceTest::the_assertion_is_valid_when_the_current_sp_entity_id_is_a_valid_audience";d:0.004;s:128:"SAML2\Assertion\Validation\ConstraintValidator\SubjectConfirmationMethodTest::a_subject_confirmation_with_bearer_method_is_valid";d:0.001;s:139:"SAML2\Assertion\Validation\ConstraintValidator\SubjectConfirmationMethodTest::a_subject_confirmation_with_holder_of_key_method_is_not_valid";d:0.001;s:136:"SAML2\Assertion\Validation\ConstraintValidator\SubjectConfirmationNotBeforeTest::timestamp_in_the_future_beyond_graceperiod_is_not_valid";d:0.032;s:113:"SAML2\Assertion\Validation\ConstraintValidator\SubjectConfirmationNotBeforeTest::time_within_graceperiod_is_valid";d:0.031;s:102:"SAML2\Assertion\Validation\ConstraintValidator\SubjectConfirmationNotBeforeTest::current_time_is_valid";d:0.032;s:137:"SAML2\Assertion\Validation\ConstraintValidator\SubjectConfirmationNotOnOrAfterTest::timestamp_in_the_past_before_graceperiod_is_not_valid";d:0.031;s:116:"SAML2\Assertion\Validation\ConstraintValidator\SubjectConfirmationNotOnOrAfterTest::time_within_graceperiod_is_valid";d:0.029;s:105:"SAML2\Assertion\Validation\ConstraintValidator\SubjectConfirmationNotOnOrAfterTest::current_time_is_valid";d:0.03;s:175:"SAML2\Assertion\Validation\ConstraintValidator\SubjectConfirmationRecipientMathchesTest::when_the_subject_confirmation_recipient_differs_from_the_destination_the_sc_is_invalid";d:0.002;s:169:"SAML2\Assertion\Validation\ConstraintValidator\SubjectConfirmationRecipientMathchesTest::when_the_subject_confirmation_recipient_equals_the_destination_the_sc_is_invalid";d:0.001;s:159:"SAML2\Assertion\Validation\ConstraintValidator\SubjectConfirmationResponseToMatchesTest::when_the_response_responseto_is_null_the_subject_confirmation_is_valid";d:0.031;s:169:"SAML2\Assertion\Validation\ConstraintValidator\SubjectConfirmationResponseToMatchesTest::when_the_subjectconfirmation_responseto_is_null_the_subjectconfirmation_is_valid";d:0.003;s:183:"SAML2\Assertion\Validation\ConstraintValidator\SubjectConfirmationResponseToMatchesTest::when_the_subjectconfirmation_and_response_responseto_are_null_the_subjectconfirmation_is_valid";d:0.002;s:184:"SAML2\Assertion\Validation\ConstraintValidator\SubjectConfirmationResponseToMatchesTest::when_the_subjectconfirmation_and_response_responseto_are_equal_the_subjectconfirmation_is_valid";d:0.003;s:183:"SAML2\Assertion\Validation\ConstraintValidator\SubjectConfirmationResponseToMatchesTest::when_the_subjectconfirmation_and_response_responseto_differ_the_subjectconfirmation_is_invalid";d:0.004;s:36:"SAML2\AssertionTest::testMarshalling";d:0.004;s:38:"SAML2\AssertionTest::testUnmarshalling";d:0.002;s:58:"SAML2\AssertionTest::testMarshallingUnmarshallingChristmas";d:0.004;s:66:"SAML2\AssertionTest::testMarshallingUnmarshallingAttributeValTypes";d:0.004;s:58:"SAML2\AssertionTest::testMarshallingWrongAttributeValTypes";d:0.003;s:52:"SAML2\AssertionTest::testAuthnContextDeclAndClassRef";d:0.003;s:55:"SAML2\AssertionTest::testAuthnContextDeclRefAndClassRef";d:0.002;s:44:"SAML2\AssertionTest::testSetAuthnContextDecl";d:0.002;s:43:"SAML2\AssertionTest::testConvertIssuerToXML";d:0.003;s:57:"SAML2\AssertionTest::testAuthnContextDeclAndRefConstraint";d:0.003;s:56:"SAML2\AssertionTest::testMustHaveClassRefOrDeclOrDeclRef";d:0.002;s:51:"SAML2\AssertionTest::testGetSubjectConfirmationData";d:0.003;s:54:"SAML2\AssertionTest::testNoAuthnContextDeclRefFallback";d:0.003;s:47:"SAML2\AssertionTest::testHasEncryptedAttributes";d:0.003;s:48:"SAML2\AssertionTest::testHasEncryptedAttributes2";d:0.002;s:61:"SAML2\AssertionTest::testCorrectSignatureMethodCanBeExtracted";d:0.008;s:62:"SAML2\AssertionTest::testEptiAttributeValuesAreParsedCorrectly";d:0.005;s:61:"SAML2\AssertionTest::testEptiLegacyAttributeValuesCanBeString";d:0.004;s:67:"SAML2\AssertionTest::testEptiAttributeParsingSupportsMultipleValues";d:0.004;s:74:"SAML2\AssertionTest::testAttributeValuesWithComplexTypesAreParsedCorrectly";d:0.003;s:63:"SAML2\AssertionTest::testTypedAttributeValuesAreParsedCorrectly";d:0.003;s:88:"SAML2\AssertionTest::testEncryptedAttributeValuesWithComplexTypeValuesAreParsedCorrectly";d:0.008;s:72:"SAML2\AssertionTest::testTypedEncryptedAttributeValuesAreParsedCorrectly";d:0.013;s:46:"SAML2\AssertionTest::testVerifySignedAssertion";d:0.005;s:50:"SAML2\AssertionTest::testCommentsInSignedAssertion";d:0.004;s:57:"SAML2\AssertionTest::testVerifySignedAssertionChangedBody";d:0.004;s:54:"SAML2\AssertionTest::testVerifySignedAssertionWrongKey";d:0.005;s:57:"SAML2\AssertionTest::testVerifySignedAssertionWrongKeyDSA";d:0.004;s:48:"SAML2\AssertionTest::testVerifyUnsignedAssertion";d:0.002;s:67:"SAML2\AssertionTest::testAssertionVersionOtherThan20ThrowsException";d:0.001;s:58:"SAML2\AssertionTest::testAssertionWithoutIDthrowsException";d:0.001;s:62:"SAML2\AssertionTest::testAssertionWithoutIssuerThrowsException";d:0.001;s:58:"SAML2\AssertionTest::testMoreThanOneSubjectThrowsException";d:0.002;s:57:"SAML2\AssertionTest::testMoreThanOneNameIDThrowsException";d:0.002;s:67:"SAML2\AssertionTest::testSubjectMustHaveNameIDorSubjectConfirmation";d:0.002;s:57:"SAML2\AssertionTest::testTooManyConditionsThrowsException";d:0.002;s:69:"SAML2\AssertionTest::testConditionWithUnknownNamespaceThrowsException";d:0.002;s:46:"SAML2\AssertionTest::testConditionAllowedTypes";d:0.002;s:46:"SAML2\AssertionTest::testUnkownThrowsException";d:0.002;s:65:"SAML2\AssertionTest::testMoreThanOneAuthnStatementThrowsException";d:0.001;s:59:"SAML2\AssertionTest::testMissingAuthnInstantThrowsException";d:0.001;s:63:"SAML2\AssertionTest::testMoreThanOneAuthnContextThrowsException";d:0.002;s:59:"SAML2\AssertionTest::testMissingAuthnContextThrowsException";d:0.002;s:70:"SAML2\AssertionTest::testMoreThanOneAuthnContextDeclRefThrowsException";d:0.002;s:67:"SAML2\AssertionTest::testMoreThanOneAuthnContextDeclThrowsException";d:0.002;s:71:"SAML2\AssertionTest::testMoreThanOneAuthnContextClassRefThrowsException";d:0.002;s:47:"SAML2\AssertionTest::testMissingNameOnAttribute";d:0.002;s:50:"SAML2\AssertionTest::testMixedAttributeNameFormats";d:0.002;s:44:"SAML2\AssertionTest::testNameIDunmarshalling";d:0.003;s:41:"SAML2\AssertionTest::testNameIdEncryption";d:0.005;s:57:"SAML2\AssertionTest::testRetrieveEncryptedNameIdException";d:0.002;s:51:"SAML2\AssertionTest::testMarshallingElementOrdering";d:0.003;s:57:"SAML2\AssertionTest::testAttributeValueEmptyStringAndNull";d:0.002;s:41:"SAML2\AttributeQueryTest::testMarshalling";d:0.002;s:43:"SAML2\AttributeQueryTest::testUnmarshalling";d:0.003;s:49:"SAML2\AttributeQueryTest::testAttributeNameFormat";d:0.002;s:63:"SAML2\AttributeQueryTest::testNoNameFormatDefaultsToUnspecified";d:0.002;s:66:"SAML2\AttributeQueryTest::testMultiNameFormatDefaultsToUnspecified";d:0.002;s:67:"SAML2\AttributeQueryTest::testMissingNameOnAttributeThrowsException";d:0.002;s:54:"SAML2\AttributeQueryTest::testNoSubjectThrowsException";d:0.002;s:60:"SAML2\AttributeQueryTest::testTooManySubjectsThrowsException";d:0.003;s:62:"SAML2\AttributeQueryTest::testNoNameIDinSubjectThrowsException";d:0.003;s:59:"SAML2\AttributeQueryTest::testTooManyNameIDsThrowsException";d:0.007;s:41:"SAML2\AuthnRequestTest::testUnmarshalling";d:0.001;s:54:"SAML2\AuthnRequestTest::testMarshallingOfSimpleRequest";d:0.002;s:45:"SAML2\AuthnRequestTest::testExtensionOrdering";d:0.003;s:57:"SAML2\AuthnRequestTest::testThatTheSubjectIsCorrectlyRead";d:0.002;s:68:"SAML2\AuthnRequestTest::testThatTheSubjectCanBeSetBySettingTheNameId";d:0.001;s:63:"SAML2\AuthnRequestTest::testThatAnEncryptedNameIdCanBeDecrypted";d:0.003;s:80:"SAML2\AuthnRequestTest::testThatAnEncryptedNameIdResultsInTheCorrectXmlStructure";d:0.005;s:45:"SAML2\AuthnRequestTest::testIDPlistAttributes";d:0.002;s:48:"SAML2\AuthnRequestTest::testgetIDPlistAttributes";d:0.002;s:65:"SAML2\AuthnRequestTest::testScopeWithoutProviderIDThrowsException";d:0.001;s:55:"SAML2\AuthnRequestTest::testRequesterIdIsAddedCorrectly";d:0.002;s:54:"SAML2\AuthnRequestTest::testRequesterIdIsReadCorrectly";d:0.003;s:54:"SAML2\AuthnRequestTest::testProxyCountIsAddedCorrectly";d:0.003;s:53:"SAML2\AuthnRequestTest::testProxyCountIsReadCorrectly";d:0.002;s:47:"SAML2\AuthnRequestTest::testGettingNameIDPolicy";d:0.002;s:47:"SAML2\AuthnRequestTest::testSettingNameIDPolicy";d:0.002;s:57:"SAML2\AuthnRequestTest::testSettingNameIDPolicyFormatOnly";d:0.003;s:73:"SAML2\AuthnRequestTest::testSettingNameIDPolicyToIncorrectTypeAllowCreate";d:0.001;s:77:"SAML2\AuthnRequestTest::testSettingNameIDPolicyToIncorrectTypeSPNameQualifier";d:0.001;s:68:"SAML2\AuthnRequestTest::testSettingNameIDPolicyToIncorrectTypeFormat";d:0.001;s:45:"SAML2\AuthnRequestTest::testGettingForceAuthn";d:0.002;s:64:"SAML2\AuthnRequestTest::testSettingForceAuthnResultsInCorrectXML";d:0.002;s:44:"SAML2\AuthnRequestTest::testGettingIsPassive";d:0.003;s:63:"SAML2\AuthnRequestTest::testSettingIsPassiveResultsInCorrectXML";d:0.002;s:66:"SAML2\AuthnRequestTest::testSettingProviderNameResultsInCorrectXml";d:0.002;s:47:"SAML2\AuthnRequestTest::testGettingProviderName";d:0.001;s:59:"SAML2\AuthnRequestTest::testSettingProtocolBindingAndACSUrl";d:0.002;s:59:"SAML2\AuthnRequestTest::testMultipleSubjectsThrowsException";d:0.002;s:67:"SAML2\AuthnRequestTest::testMultipleNameIdsInSubjectThrowsException";d:0.002;s:55:"SAML2\AuthnRequestTest::testEmptySubjectThrowsException";d:0.002;s:54:"SAML2\AuthnRequestTest::testAudiencesAreAddedCorrectly";d:0.003;s:53:"SAML2\AuthnRequestTest::testAudiencesAreReadCorrectly";d:0.002;s:33:"SAML2\BindingTest::testGetBinding";d:0.001;s:40:"SAML2\BindingTest::testBindingGuesserGET";d:0.001;s:41:"SAML2\BindingTest::testBindingGuesserPOST";d:0.001;s:42:"SAML2\BindingTest::testBindingGuesserWRONG";d:0.002;s:40:"SAML2\BindingTest::testGetSetDestination";d:0.001;s:66:"SAML2\Certificate\KeyCollectionTest::testKeyCollectionAddWrongType";d:0.001;s:66:"SAML2\Certificate\KeyLoaderTest::load_keys_checks_for_usage_of_key";d:0.007;s:70:"SAML2\Certificate\KeyLoaderTest::load_keys_constructs_x509_certificate";d:0.002;s:66:"SAML2\Certificate\KeyLoaderTest::certificate_data_is_loaded_as_key";d:0.002;s:89:"SAML2\Certificate\KeyLoaderTest::loading_a_file_with_the_wrong_format_throws_an_exception";d:0.002;s:78:"SAML2\Certificate\KeyLoaderTest::loading_a_certificate_from_file_creates_a_key";d:0.003;s:111:"SAML2\Certificate\KeyLoaderTest::loading_a_required_certificate_from_an_empty_configuration_throws_an_exception";d:0.008;s:90:"SAML2\Certificate\KeyLoaderTest::loading_a_certificate_file_from_configuration_creates_key";d:0.005;s:104:"SAML2\Certificate\KeyLoaderTest::loading_an_invalid_certificate_file_from_configuration_throws_exception";d:0.006;s:70:"SAML2\Certificate\KeyTest::invalid_key_usage_should_throw_an_exception";d:0.001;s:98:"SAML2\Certificate\KeyTest::invalid_offset_type_should_throw_an_exception with data set "offsetGet"";d:0.001;s:101:"SAML2\Certificate\KeyTest::invalid_offset_type_should_throw_an_exception with data set "offsetExists"";d:0.001;s:98:"SAML2\Certificate\KeyTest::invalid_offset_type_should_throw_an_exception with data set "offsetSet"";d:0.001;s:100:"SAML2\Certificate\KeyTest::invalid_offset_type_should_throw_an_exception with data set "offsetUnset"";d:0.001;s:70:"SAML2\Certificate\KeyTest::assert_that_key_usage_check_works_correctly";d:0.002;s:64:"SAML2\Certificate\KeyTest::assert_that_offsetget_works_correctly";d:0.001;s:64:"SAML2\Certificate\KeyTest::assert_that_offsetunset_unsets_offset";d:0.001;s:136:"SAML2\Certificate\PrivateKeyLoaderTest::loading_a_configured_private_key_returns_a_certificate_private_key with data set "no passphrase"";d:0.002;s:138:"SAML2\Certificate\PrivateKeyLoaderTest::loading_a_configured_private_key_returns_a_certificate_private_key with data set "with passphrase"";d:0.001;s:146:"SAML2\Certificate\PrivateKeyLoaderTest::loading_a_configured_private_key_returns_a_certificate_private_key with data set "private key as contents"";d:0.001;s:54:"SAML2\Certificate\PrivateKeyTest::test_create_from_key";d:0.001;s:84:"SAML2\Certificate\X509Test::x509_certificate_contents_must_be_stripped_of_whitespace";d:0.001;s:70:"SAML2\Configuration\ArrayAdapterTest::set_configuration_can_be_queried";d:0.001;s:95:"SAML2\Configuration\ArrayAdapterTest::default_values_are_returned_for_unavailable_configuration";d:0.001;s:83:"SAML2\Configuration\DestinationTest::two_destinations_with_the_same_value_are_equal";d:0.001;s:93:"SAML2\Configuration\DestinationTest::two_destinations_with_the_different_values_are_not_equal";d:0.001;s:63:"SAML2\DOMDocumentFactoryTest::testNotXmlStringRaisesAnException";d:0.001;s:60:"SAML2\DOMDocumentFactoryTest::testXmlStringIsCorrectlyLoaded";d:0.001;s:67:"SAML2\DOMDocumentFactoryTest::testFileThatDoesNotExistIsNotAccepted";d:0.001;s:73:"SAML2\DOMDocumentFactoryTest::testFileThatDoesNotContainXMLCannotBeLoaded";d:0.001;s:61:"SAML2\DOMDocumentFactoryTest::testFileWithValidXMLCanBeLoaded";d:0.001;s:70:"SAML2\DOMDocumentFactoryTest::testFileThatContainsDocTypeIsNotAccepted";d:0.001;s:72:"SAML2\DOMDocumentFactoryTest::testStringThatContainsDocTypeIsNotAccepted";d:0.001;s:53:"SAML2\DOMDocumentFactoryTest::testEmptyFileIsNotValid";d:0.001;s:55:"SAML2\DOMDocumentFactoryTest::testEmptyStringIsNotValid";d:0.001;s:66:"SAML2\HTTPArtifactTest::testArtifactMissingUrlParamThrowsException";d:0.001;s:38:"SAML2\HTTPPostTest::testRequestParsing";d:0.002;s:39:"SAML2\HTTPPostTest::testResponseParsing";d:0.004;s:40:"SAML2\HTTPPostTest::testNoRequestParsing";d:0.001;s:46:"SAML2\HTTPPostTest::testSendMissingDestination";d:0.001;s:64:"SAML2\HTTPPostTest::testSendAuthnRequestWithDestinationInBinding";d:0.001;s:55:"SAML2\HTTPPostTest::testSendAuthnRequestWithDestination";d:0.001;s:41:"SAML2\HTTPPostTest::testSendAuthnResponse";d:0.003;s:42:"SAML2\HTTPRedirectTest::testRequestParsing";d:0.002;s:43:"SAML2\HTTPRedirectTest::testResponseParsing";d:0.006;s:52:"SAML2\HTTPRedirectTest::testRequestParsingMoreParams";d:0.002;s:48:"SAML2\HTTPRedirectTest::testSignedRequestParsing";d:0.002;s:51:"SAML2\HTTPRedirectTest::testSignedRequestValidation";d:0.003;s:63:"SAML2\HTTPRedirectTest::testSignedRequestValidationWrongKeytype";d:0.002;s:52:"SAML2\HTTPRedirectTest::testInvalidEncodingSpecified";d:0.001;s:45:"SAML2\HTTPRedirectTest::testNoSigAlgSpecified";d:0.002;s:46:"SAML2\HTTPRedirectTest::testInvalidRequestData";d:0.001;s:47:"SAML2\HTTPRedirectTest::testNoRequestOrResponse";d:0.001;s:50:"SAML2\HTTPRedirectTest::testSendWithoutDestination";d:0.001;s:44:"SAML2\HTTPRedirectTest::testSendAuthnrequest";d:0.002;s:45:"SAML2\HTTPRedirectTest::testSendAuthnResponse";d:0.002;s:63:"SAML2\HTTPRedirectTest::testSendAuthnResponseBespokeDestination";d:0.002;s:40:"SAML2\LogoutRequestTest::testMarshalling";d:0.002;s:42:"SAML2\LogoutRequestTest::testUnmarshalling";d:0.003;s:44:"SAML2\LogoutRequestTest::testEncryptedNameId";d:0.002;s:45:"SAML2\LogoutRequestTest::testDecryptingNameId";d:0.003;s:75:"SAML2\LogoutRequestTest::testDecryptingNameIdForgotToDecryptThrowsException";d:0.002;s:53:"SAML2\LogoutRequestTest::testPlainNameIDUnmarshalling";d:0.002;s:57:"SAML2\LogoutRequestTest::testMissingNameIDThrowsException";d:0.002;s:58:"SAML2\LogoutRequestTest::testMultipleNameIDThrowsException";d:0.002;s:44:"SAML2\LogoutRequestTest::testGetNotOnOrAfter";d:0.002;s:44:"SAML2\LogoutRequestTest::testSetNotOnOrAfter";d:0.002;s:50:"SAML2\LogoutRequestTest::testWithOutSessionIndices";d:0.003;s:54:"SAML2\LogoutRequestTest::testSetSessionIndicesVariants";d:0.003;s:42:"SAML2\LogoutResponseTest::testLogoutFailed";d:0.003;s:43:"SAML2\LogoutResponseTest::testLogoutSuccess";d:0.002;s:75:"SAML2\MessageTest::testCorrectSignatureMethodCanBeExtractedFromAuthnRequest";d:0.006;s:43:"SAML2\MessageTest::testIssuerParsedAsNameID";d:0.002;s:41:"SAML2\MessageTest::testConvertIssuerToXML";d:0.002;s:71:"SAML2\MessageTest::testCorrectSignatureMethodCanBeExtractedFromResponse";d:0.011;s:36:"SAML2\MessageTest::testGetExtensions";d:0.003;s:36:"SAML2\MessageTest::testSetExtensions";d:0.003;s:46:"SAML2\MessageTest::testNamespaceMustBeProtocol";d:0.002;s:42:"SAML2\MessageTest::testSAMLversionMustBe20";d:0.001;s:40:"SAML2\MessageTest::testMessageMustHaveID";d:0.003;s:42:"SAML2\MessageTest::testParseAttributeQuery";d:0.004;s:45:"SAML2\MessageTest::testMessageTypeMustBeKnown";d:0.001;s:42:"SAML2\ArtifactResolveTest::testMarshalling";d:0.001;s:44:"SAML2\ArtifactResolveTest::testUnmarshalling";d:0.002;s:43:"SAML2\ArtifactResponseTest::testMarshalling";d:0.002;s:45:"SAML2\ArtifactResponseTest::testUnmarshalling";d:0.003;s:100:"SAML2\Response\SignatureValidationTest::testThatAnUnsignedResponseWithASignedAssertionCanBeProcessed";d:0.099;s:101:"SAML2\Response\SignatureValidationTest::testThatAnSignedResponseWithAnUnsignedAssertionCanBeProcessed";d:0.103;s:90:"SAML2\Response\SignatureValidationTest::testThatASignedResponseWithASignedAssertionIsValid";d:0.111;s:105:"SAML2\Response\SignatureValidationTest::testThatAnUnsignedResponseWithNoSignedAssertionsThrowsAnException";d:0.153;s:117:"SAML2\Response\Validation\ConstraintValidator\DestinationMatchesTest::a_response_is_valid_when_the_destinations_match";d:0.003;s:129:"SAML2\Response\Validation\ConstraintValidator\DestinationMatchesTest::a_response_is_not_valid_when_the_destinations_are_not_equal";d:0.003;s:128:"SAML2\Response\Validation\ConstraintValidator\IsSuccessfulTest::validating_a_successful_response_gives_a_valid_validation_result";d:0.003;s:138:"SAML2\Response\Validation\ConstraintValidator\IsSuccessfulTest::an_unsuccessful_response_is_not_valid_and_generates_a_proper_error_message";d:0.004;s:67:"SAML2\Response\Validation\ResultTest::added_errors_can_be_retrieved";d:0.001;s:93:"SAML2\Response\Validation\ResultTest::the_result_correctly_reports_whether_or_not_it_is_valid";d:0.001;s:99:"SAML2\Response\XmlSignatureWrappingTest::testThatASignatureReferencingAnEmbeddedAssertionIsNotValid";d:0.004;s:96:"SAML2\Response\XmlSignatureWrappingTest::testThatASignatureReferencingAnotherAssertionIsNotValid";d:0.004;s:35:"SAML2\ResponseTest::testMarshalling";d:0.001;s:28:"SAML2\ResponseTest::testLoop";d:0.006;s:46:"SAML2\SOAPTest::testRequestParsingEmptyMessage";d:0.012;s:34:"SAML2\SOAPTest::testRequestParsing";d:0.003;s:40:"SAML2\SOAPTest::testSendArtifactResponse";d:0.002;s:32:"SAML2\SOAPTest::testSendResponse";d:0.004;s:83:"SAML2\Signature\PublicKeyValidatorTest::it_cannot_validate_if_no_keys_can_be_loaded";d:0.017;s:80:"SAML2\Signature\PublicKeyValidatorTest::it_will_validate_when_keys_can_be_loaded";d:0.005;s:81:"SAML2\Signature\PublicKeyValidatorTest::non_X509_keys_are_not_used_for_validation";d:0.005;s:98:"SAML2\Signature\PublicKeyValidatorTest::signed_message_with_valid_signature_is_validated_correctly";d:0.014;s:88:"SAML2\Signature\ValidatorChainTest::if_no_validators_can_validate_an_exception_is_thrown";d:0.002;s:77:"SAML2\Signature\ValidatorChainTest::all_registered_validators_should_be_tried";d:0.001;s:95:"SAML2\Signature\ValidatorChainTest::it_uses_the_result_of_the_first_validator_that_can_validate";d:0.001;s:62:"SAML2\SignedElementHelperTest::testValidateWithoutModification";d:0.004;s:65:"SAML2\SignedElementHelperTest::testValidateWithReferenceTampering";d:0.004;s:61:"SAML2\SignedElementHelperTest::testValidateWithValueTampering";d:0.004;s:60:"SAML2\SignedElementHelperTest::testGetValidatingCertificates";d:0.008;s:62:"SAML2\SignedElementHelperTest::testGetSignatureKeyCertificates";d:0.004;s:41:"SAML2\StatusResponseTest::testMarshalling";d:0.001;s:43:"SAML2\StatusResponseTest::testUnmarshalling";d:0.002;s:43:"SAML2\StatusResponseTest::testStatusSuccess";d:0.003;s:43:"SAML2\StatusResponseTest::testStatusSubcode";d:0.003;s:40:"SAML2\StatusResponseTest::testResponseTo";d:0.003;s:60:"SAML2\StatusResponseTest::testNoStatusElementThrowsException";d:0.002;s:57:"SAML2\StatusResponseTest::testNoStatusCodeThrowsException";d:0.002;s:63:"SAML2\Utilities\ArrayCollectionTest::test_construct_get_add_set";d:0.002;s:48:"SAML2\Utilities\ArrayCollectionTest::test_remove";d:0.001;s:58:"SAML2\Utilities\ArrayCollectionTest::test_first_last_count";d:0.001;s:48:"SAML2\Utilities\ArrayCollectionTest::test_offset";d:0.001;s:53:"SAML2\Utilities\ArrayCollectionTest::test_onlyelement";d:0.001;s:58:"SAML2\Utilities\ArrayCollectionTest::test_onlyelement_fail";d:0.001;s:53:"SAML2\Utilities\ArrayCollectionTest::test_getiterator";d:0.001;s:52:"SAML2\Utilities\ArrayCollectionTest::test_filter_map";d:0.001;s:51:"SAML2\Utilities\CertificateTest::testValidStructure";d:0.001;s:57:"SAML2\Utilities\CertificateTest::testConvertToCertificate";d:0.001;s:81:"SAML2\Utilities\FileTest::when_loading_a_non_existant_file_an_exception_is_thrown";d:0.001;s:65:"SAML2\Utilities\FileTest::an_existing_readable_file_can_be_loaded";d:0.001;s:28:"SAML2\UtilsTest::testXpQuery";d:0.001;s:30:"SAML2\UtilsTest::testAddString";d:0.001;s:34:"SAML2\UtilsTest::testGetAddStrings";d:0.001;s:34:"SAML2\UtilsTest::testExtractString";d:0.001;s:43:"SAML2\UtilsTest::testExtractLocalizedString";d:0.002;s:59:"SAML2\UtilsTest::testXsDateTimeToTimestamp with data set #0";d:0.002;s:59:"SAML2\UtilsTest::testXsDateTimeToTimestamp with data set #1";d:0.001;s:59:"SAML2\UtilsTest::testXsDateTimeToTimestamp with data set #2";d:0.001;s:59:"SAML2\UtilsTest::testXsDateTimeToTimestamp with data set #3";d:0.001;s:59:"SAML2\UtilsTest::testXsDateTimeToTimestamp with data set #4";d:0.001;s:59:"SAML2\UtilsTest::testXsDateTimeToTimestamp with data set #5";d:0.001;s:59:"SAML2\UtilsTest::testXsDateTimeToTimestamp with data set #6";d:0.001;s:59:"SAML2\UtilsTest::testXsDateTimeToTimestamp with data set #7";d:0.001;s:59:"SAML2\UtilsTest::testXsDateTimeToTimestamp with data set #8";d:0.001;s:59:"SAML2\UtilsTest::testXsDateTimeToTimestamp with data set #9";d:0.001;s:60:"SAML2\UtilsTest::testXsDateTimeToTimestamp with data set #10";d:0.001;s:60:"SAML2\UtilsTest::testXsDateTimeToTimestamp with data set #11";d:0.001;s:60:"SAML2\UtilsTest::testXsDateTimeToTimestamp with data set #12";d:0.001;s:33:"SAML2\UtilsTest::testParseBoolean";d:0.002;s:40:"SAML2\UtilsTest::testCreateKeyDescriptor";d:0.001;s:47:"SAML2\XML\ChunkTest::testChunkSerializationLoop";d:0.002;s:47:"SAML2\XML\alg\DigestMethodTest::testMarshalling";d:0.003;s:49:"SAML2\XML\alg\DigestMethodTest::testUnmarshalling";d:0.002;s:67:"SAML2\XML\alg\DigestMethodTest::testMissingAlgorithmThrowsException";d:0.002;s:48:"SAML2\XML\alg\SigningMethodTest::testMarshalling";d:0.002;s:50:"SAML2\XML\alg\SigningMethodTest::testUnmarshalling";d:0.001;s:68:"SAML2\XML\alg\SigningMethodTest::testMissingAlgorithmThrowsException";d:0.001;s:53:"SAML2\XML\ecp\ResponseTest::testConstructorWithoutXML";d:0.001;s:52:"SAML2\XML\ecp\ResponseTest::testToXMLReturnsResponse";d:0.001;s:55:"SAML2\XML\ecp\ResponseTest::testToXMLResponseAttributes";d:0.001;s:53:"SAML2\XML\ecp\ResponseTest::testToXMLResponseAppended";d:0.001;s:60:"SAML2\XML\md\AdditionalMetadataLocationTest::testMarshalling";d:0.002;s:62:"SAML2\XML\md\AdditionalMetadataLocationTest::testUnmarshalling";d:0.001;s:55:"SAML2\XML\md\AffiliationDescriptorTest::testMarshalling";d:0.002;s:57:"SAML2\XML\md\AffiliationDescriptorTest::testUnmarshalling";d:0.002;s:71:"SAML2\XML\md\AffiliationDescriptorTest::testUnmarshallingWithoutMembers";d:0.002;s:69:"SAML2\XML\md\AffiliationDescriptorTest::testUnmarshallingWithoutOwner";d:0.001;s:49:"SAML2\XML\md\ContactPersonTest::testContactPerson";d:0.002;s:56:"SAML2\XML\md\ContactPersonTest::testContactPersonFromXML";d:0.002;s:52:"SAML2\XML\md\ContactPersonTest::testMultipleNamesXML";d:0.001;s:51:"SAML2\XML\md\ContactPersonTest::testEmptySurNameXML";d:0.001;s:57:"SAML2\XML\md\ContactPersonTest::testMissingContactTypeXML";d:0.001;s:46:"SAML2\XML\md\EndpointTypeTest::testMarshalling";d:0.002;s:48:"SAML2\XML\md\EndpointTypeTest::testUnmarshalling";d:0.002;s:59:"SAML2\XML\md\EntityDescriptorTest::testMissingAffiliationId";d:0.001;s:54:"SAML2\XML\md\EntityDescriptorTest::testMissingEntityId";d:0.001;s:61:"SAML2\XML\md\EntityDescriptorTest::testMissingAffiliateMember";d:0.001;s:56:"SAML2\XML\md\EntityDescriptorTest::testMissingDescriptor";d:0.001;s:56:"SAML2\XML\md\EntityDescriptorTest::testInvalidValidUntil";d:0.001;s:52:"SAML2\XML\md\EntityDescriptorTest::testUnmarshalling";d:0.002;s:53:"SAML2\XML\md\EntityDescriptorTest::testUnmarshalling2";d:0.003;s:50:"SAML2\XML\md\ExtensionsTest::testExtensionAddEmpty";d:0.001;s:52:"SAML2\XML\md\ExtensionsTest::testSupportedExtensions";d:0.003;s:46:"SAML2\XML\md\ExtensionsTest::testAddExtensions";d:0.001;s:53:"SAML2\XML\md\IndexedEndpointTypeTest::testMarshalling";d:0.003;s:48:"SAML2\XML\md\RoleDescriptorTest::testMarshalling";d:0.002;s:54:"SAML2\XML\mdattr\EntityAttributesTest::testMarshalling";d:0.002;s:56:"SAML2\XML\mdattr\EntityAttributesTest::testUnmarshalling";d:0.002;s:66:"SAML2\XML\mdattr\EntityAttributesTest::testUnmarshallingAttributes";d:0.003;s:52:"SAML2\XML\mdrpi\PublicationInfoTest::testMarshalling";d:0.003;s:54:"SAML2\XML\mdrpi\PublicationInfoTest::testUnmarshalling";d:0.002;s:72:"SAML2\XML\mdrpi\PublicationInfoTest::testMissingPublisherThrowsException";d:0.001;s:53:"SAML2\XML\mdrpi\RegistrationInfoTest::testMarshalling";d:0.003;s:55:"SAML2\XML\mdrpi\RegistrationInfoTest::testUnmarshalling";d:0.002;s:73:"SAML2\XML\mdrpi\RegistrationInfoTest::testMissingPublisherThrowsException";d:0.002;s:91:"SAML2\XML\mdrpi\RegistrationInfoTest::testEmptyRegistrationAuthorityOutboundThrowsException";d:0.002;s:46:"SAML2\XML\mdui\DiscoHintsTest::testMarshalling";d:0.002;s:51:"SAML2\XML\mdui\DiscoHintsTest::testMarshallingEmpty";d:0.001;s:48:"SAML2\XML\mdui\DiscoHintsTest::testUnmarshalling";d:0.002;s:54:"SAML2\XML\mdui\DiscoHintsTest::testMarshallingChildren";d:0.001;s:56:"SAML2\XML\mdui\DiscoHintsTest::testUnmarshallingChildren";d:0.001;s:44:"SAML2\XML\mdui\KeywordsTest::testMarshalling";d:0.001;s:67:"SAML2\XML\mdui\KeywordsTest::testKeywordWithPlusSignThrowsException";d:0.001;s:46:"SAML2\XML\mdui\KeywordsTest::testUnmarshalling";d:0.001;s:66:"SAML2\XML\mdui\KeywordsTest::testUnmarshallingFailsMissingLanguage";d:0.001;s:66:"SAML2\XML\mdui\KeywordsTest::testUnmarshallingFailsMissingKeywords";d:0.001;s:40:"SAML2\XML\mdui\LogoTest::testMarshalling";d:0.002;s:42:"SAML2\XML\mdui\LogoTest::testUnmarshalling";d:0.001;s:49:"SAML2\XML\mdui\LogoTest::testUnmarshallingDataURL";d:0.001;s:55:"SAML2\XML\mdui\LogoTest::testUnmarshallingFailsEmptyURL";d:0.001;s:59:"SAML2\XML\mdui\LogoTest::testUnmarshallingFailsMissingWidth";d:0.001;s:60:"SAML2\XML\mdui\LogoTest::testUnmarshallingFailsMissingHeight";d:0.001;s:42:"SAML2\XML\mdui\UIInfoTest::testMarshalling";d:0.002;s:50:"SAML2\XML\mdui\UIInfoTest::testMarshallingChildren";d:0.002;s:44:"SAML2\XML\mdui\UIInfoTest::testUnmarshalling";d:0.002;s:52:"SAML2\XML\mdui\UIInfoTest::testUnmarshallingChildren";d:0.002;s:43:"SAML2\XML\md\AttributeTest::testMarshalling";d:0.002;s:45:"SAML2\XML\md\AttributeTest::testUnmarshalling";d:0.002;s:52:"SAML2\XML\md\AttributeTest::testUnmarshallingFailure";d:0.001;s:57:"SAML2\XML\md\AttributeValueTest::testEmptyStringAttribute";d:0.002;s:66:"SAML2\XML\md\AttributeValueTest::testCreateAttributeFromDOMElement";d:0.002;s:46:"SAML2\XML\md\AttributeValueTest::testSerialize";d:0.001;s:47:"SAML2\XML\md\IssuerShowAllTest::testMarshalling";d:0.001;s:49:"SAML2\XML\md\IssuerShowAllTest::testUnmarshalling";d:0.001;s:67:"SAML2\XML\md\IssuerShowAllTest::testToStringShowAllTrueFormatNameID";d:0.001;s:68:"SAML2\XML\md\IssuerShowAllTest::testToStringShowAllFalseFormatNameID";d:0.002;s:70:"SAML2\XML\md\IssuerShowAllTest::testToStringShowAllTrueNOTNameIDFormat";d:0.001;s:73:"SAML2\XML\md\IssuerShowAllTest::testToStringShowAllDefaultNOTNameIDFormat";d:0.001;s:70:"SAML2\XML\md\IssuerShowAllTest::testToStringShowAllDefaultNameIDFormat";d:0.001;s:40:"SAML2\XML\md\NameIDTest::testMarshalling";d:0.001;s:42:"SAML2\XML\md\NameIDTest::testUnmarshalling";d:0.001;s:37:"SAML2\XML\md\NameIDTest::testToString";d:0.001;s:59:"SAML2\XML\saml\SubjectConfirmationDataTest::testMarshalling";d:0.001;s:61:"SAML2\XML\saml\SubjectConfirmationDataTest::testUnmarshalling";d:0.001;s:55:"SAML2\XML\saml\SubjectConfirmationTest::testMarshalling";d:0.001;s:57:"SAML2\XML\saml\SubjectConfirmationTest::testUnmarshalling";d:0.001;s:72:"SAML2\XML\saml\SubjectConfirmationTest::testMethodMissingThrowsException";d:0.001;s:69:"SAML2\XML\saml\SubjectConfirmationTest::testManyNameIDThrowsException";d:0.001;s:86:"SAML2\XML\saml\SubjectConfirmationTest::testManySubjectConfirmationDataThrowsException";d:0.001;s:49:"SAML2\XML\samlp\ExtensionsTest::testExtensionsGet";d:0.002;s:54:"SAML2\XML\samlp\ExtensionsTest::testExtensionsAddEmpty";d:0.002;s:53:"SAML2\XML\samlp\ExtensionsTest::testExtensionsAddSome";d:0.002;s:50:"SAML2\XML\shibmd\ScopeTest::testMarshallingLiteral";d:0.001;s:62:"SAML2\XML\shibmd\ScopeTest::testMarshallingImplicitRegexpValue";d:0.001;s:49:"SAML2\XML\shibmd\ScopeTest::testMarshallingRegexp";d:0.001;s:52:"SAML2\XML\shibmd\ScopeTest::testUnmarshallingLiteral";d:0.001;s:63:"SAML2\XML\shibmd\ScopeTest::testUnmarshallingWithoutRegexpValue";d:0.001;s:51:"SAML2\XML\shibmd\ScopeTest::testUnmarshallingRegexp";d:0.001;s:46:"SAML2\XML\md\NameIDTestPolicy::testMarshalling";d:0.001;s:48:"SAML2\XML\md\NameIDTestPolicy::testUnmarshalling";d:0.001;}}}